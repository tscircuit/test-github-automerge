# Created using @tscircuit/plop (npm install -g @tscircuit/plop)
name: Publish to npm
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.TSCIRCUIT_BOT_GITHUB_TOKEN }}
      - name: Setup bunbut 
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - run: npm install -g pver
      - run: bun install --frozen-lockfile
      - run: bun run build
      - run: pver release --no-commit
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.TSCIRCUIT_BOT_GITHUB_TOKEN }}
          GIT_USER_NAME: "tscircuitbot"
          GIT_USER_EMAIL: "tscircuitbot@users.noreply.github.com"
      - run:
          git add package.json
          git commit -m "asd"
          # create PR
      - run:
         gh pr create --auto merge # with checks
      # - name: Trigger upstream repo updates
      #   if: env.UPSTREAM_REPOS && env.PACKAGE_NAMES
      #   run: |
      #     IFS=',' read -ra REPOS <<< "${{ env.UPSTREAM_REPOS }}"
      #     for repo in "${REPOS[@]}"; do
      #       if [[ -n "$repo" ]]; then
      #         echo "Triggering update for repo: $repo"
      #         curl -X POST \
      #           -H "Accept: application/vnd.github.v3+json" \
      #           -H "Authorization: token ${{ secrets.TSCIRCUIT_BOT_GITHUB_TOKEN }}" \
      #           -H "Content-Type: application/json" \
      #           "https://api.github.com/repos/tscircuit/$repo/actions/workflows/update-package.yml/dispatches" \
      #           -d "{\"ref\":\"main\",\"inputs\":{\"package_names\":\"${{ env.PACKAGE_NAMES }}\"}}"
      #       fi
      #     done
